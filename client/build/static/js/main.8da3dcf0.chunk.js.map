{"version":3,"sources":["views/Main.js","components/OtherForm.jsx","components/Form.jsx","views/Create.js","views/Display.js","App.js","reportWebVitals.js","index.js"],"names":["styles","paper","width","padding","margin","table","minWidth","useStyles","makeStyles","card","pics","classes","useState","pirates","setPirates","loaded","setLoaded","useEffect","axios","get","then","res","data","catch","err","console","log","deletePirate","pirateId","delete","filter","pirate","_id","removeFromDom","sortedPirates","sort","a","b","name","localeCompare","Card","className","Button","onClick","navigate","variant","color","Paper","elevation","TableContainer","component","Table","style","size","aria-label","TableHead","TableRow","TableCell","align","TableBody","map","scope","src","imageUrl","e","input","marginBottom","button","display","dropdown","setName","position","setPosition","chests","setChests","catchphrase","setCatchphrase","setImageUrl","errors","setErrors","pegLeg","setPegLeg","eyePatch","setEyePatch","hookHand","setHookHand","nameError","setNameError","imageError","setImageError","catchPhraseError","setCatchphraseError","onSubmit","preventDefault","myPirate","post","errorResponse","response","errorArr","Object","keys","key","push","message","index","type","value","onChange","target","length","selected","disabled","id","OtherForm","pic","props","setPirate","App","Main","path","Create","Display","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8da3dcf0.chunk.js","sourcesContent":["import React, {useState, useEffect } from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport { Link, navigate } from '@reach/router';\nimport axios from 'axios';\nimport {\n    Paper,\n    Card,\n    Button,\n    makeStyles\n} from '@material-ui/core';\n\nconst styles = {\n    paper: {\n        width: \"60rem\",\n        padding: \"1rem\",\n        margin: \"auto\"\n    },\n    table: {\n        minWidth: 650,\n    },\n}\n\nconst useStyles = makeStyles({\n    paper: {\n        width: \"50rem\",\n        padding: \"1rem\",\n        margin: \"auto\",\n        \n    },\n    card: {\n        width: \"40rem\",\n        padding: \"3rem\",\n        margin: \"auto\"\n    },\n    pics: {\n        width: \"10rem\"\n    }\n});\n\n\nexport default () => {\n    const classes = useStyles();\n    const [ pirates, setPirates ] = useState([]);\n    const [ loaded, setLoaded ] = useState(false);\n\n    useEffect(() => {\n        axios.get('http://localhost:8000/api/pirates')\n            .then(res => {\n                setPirates(res.data);\n                setLoaded(true);\n            })\n            .catch(err => console.log(err))\n    })\n\n    const removeFromDom = pirateId => {\n        setPirates(pirates.filter(pirate => pirate._id !== pirateId))\n    }\n\n    const deletePirate = (pirateId) => {\n        axios.delete('http://localhost:8000/api/pirates/' + pirateId)\n            .then(res => {\n                removeFromDom(pirateId)\n            })\n    }\n\n    const sortedPirates = pirates.sort((a,b) => a.name.localeCompare(b.name));\n\n    return (\n        <Card>  \n            <div className=\"topBar\">\n            <h1>Pirate Crew</h1>\n            <Button \n                onClick={ () => navigate(\"/pirates/new\")}\n                variant=\"contained\" \n                color=\"primary\"\n            >\n                Add Pirate</Button>\n            </div>\n            <Paper elevation={3} >\n            { loaded?\n                <TableContainer component={Paper}>\n                    <Table style={styles.table} size=\"small\" aria-label=\"a dense table\">\n                        <TableHead>\n                            <TableRow>\n                                <TableCell>Pirate Selfie </TableCell>\n                                <TableCell>Pirate Name </TableCell>\n                                <TableCell align=\"right\">Actions</TableCell>\n                            </TableRow>\n                        </TableHead>\n                    <TableBody>\n                        {sortedPirates.map((pirate) => (\n                            <TableRow key={pirate.name}>\n                                \n                                <TableCell component=\"th\" scope=\"row\">\n                                    <img className={classes.pics} src={pirate.imageUrl} />\n                                </TableCell>\n\n                                <TableCell component=\"th\" scope=\"row\">\n                                    {pirate.name}\n                                </TableCell>\n\n                                <TableCell component=\"th\" scope=\"row\">\n                                    <Button onClick={(e) => {navigate(`/pirates/${pirate._id}`)}} variant=\"contained\" color=\"primary\"> View Pirate</Button>\n                                    <Button onClick={(e) => {deletePirate(pirate._id)}} variant=\"contained\" color=\"secondary\"> Walk the Plank!</Button>\n                                </TableCell>\n                            </TableRow>\n                        ))}\n                    </TableBody>\n                    </Table>\n                </TableContainer>:\n                \"\"\n            }\n\n            </Paper>\n\n        </Card>\n    )\n}","import React, {useState} from 'react'\nimport { makeStyles } from '@material-ui/core'\nimport axios from 'axios'\nimport { Link, navigate } from '@reach/router'\n\nconst useStyles = makeStyles({\n    paper: {\n        width: \"60rem\", padding: \"1rem\",\n        margin: \"auto\"\n    },\n    input: {\n        marginBottom: \"1rem\"\n    },\n    button: {\n        width: \"100%\",\n        display: 'block',\n        \n    },\n    dropdown: {\n        margin: \"1rem\"\n    }\n    // formControl: {\n    //     minWidth: 120,\n    // },\n});\n\nexport default () => {\n    const [name, setName] = useState(\"\");\n    const [ position, setPosition ] = useState(\"\")\n    const [ chests, setChests ] = useState();\n    const [ catchphrase, setCatchphrase ] = useState(\"\");\n    const [ imageUrl, setImageUrl ] = useState(\"\");\n    const [ errors, setErrors ] = useState([]);\n    const [ pegLeg, setPegLeg ] = useState(false);\n    const [ eyePatch, setEyePatch ] = useState(false);\n    const [ hookHand, setHookHand ] = useState(false);\n    const classes = useStyles();\n    const [ nameError, setNameError ] = useState(\"\");\n    const [ imageError, setImageError ] = useState(\"\");\n    const [ catchPhraseError, setCatchphraseError ] = useState(\"\");\n\n    const handleName = e => {\n        setName(e.target.value);\n        if(e.target.value.length < 1) {\n            setNameError(\"Name is required\")\n        }else if(e.target.value.length < 3){\n            setNameError(\"Name must be at least 3 characters\")\n        } else if(e.target.value.length > 2) {\n            setNameError(\"\");\n        }\n    }\n\n    const handleImage = e => {\n        setImageUrl(e.target.value);\n        if(e.target.value.length < 1) {\n            setImageError(\"URL is required\")\n        }else if(e.target.value.length < 6){\n            setImageError(\"Image URL must be at least 6 characters\")\n        } else if(e.target.value.length > 5) {\n            setImageError(\"\");\n        }\n    }\n\n    const handleCatchPhrase = e => {\n        setCatchphrase(e.target.value);\n        if(e.target.value.length < 1) {\n            setCatchphraseError(\"Catchphrase is required\")\n        }else if(e.target.value.length < 3){\n            setCatchphraseError(\"Catchphrase must be at least 3 characters\")\n        } else if(e.target.value.length > 2) {\n            setCatchphraseError(\"\");\n        }\n    }\n\n    const createPirate = (e) => {\n        e.preventDefault();\n        const myPirate = { name, position, chests, imageUrl, catchphrase, pegLeg, eyePatch, hookHand }\n        axios.post('http://localhost:8000/api/pirates/new', myPirate)\n            .then(res => {navigate(\"/pirates\")})\n            .catch(err => {\n                const errorResponse = err.response.data.errors;\n                const errorArr = [];\n                for(const key of Object.keys(errorResponse)) {\n                    errorArr.push(errorResponse[key].message)\n                }\n                setErrors(errorArr);\n            })\n    }  \n\n    return( \n\n\n<form onSubmit = { createPirate } >\n                {\n                    errors?\n                        (errors.map((err, index) => <p key={index}>{err}</p>)):\n                        \"\"\n                }\n                { nameError? <p>{nameError}</p>: \"\"}\n                <label>Pirate Name: </label>\n                <input \n                    type=\"text\" \n                    name=\"name\" \n                    value={name}\n                    onChange = { handleName }\n                    />\n                    <br/>\n\n                    { imageError? <p>{imageError}</p>: \"\"}\n                <label>Image URL: </label>\n                <input \n                    type=\"text\" \n                    name=\"imageUrl\" \n                    value={imageUrl}\n                    onChange = { handleImage }\n                    />\n                    <br/>\n\n\n                {/* <label>Number of Chests:</label>\n                        <input className={classes.dropdown} \n                            type=\"number\"\n                            name=\"chests\" \n                            onChange={(e) => setChests(e.target.value)}>    \n                        </input>\n                <br /> */}\n\n                <label>Number of Chests:</label>\n                    <select\n                        name=\"chests\"\n                        onChange={(e) => setChests(e.target.value)}\n                        >\n                        <option selected=\"true\" disabled=\"disabled\">Choose A Position</option>\n                        <option value=\"0\">0</option>\n                        <option value=\"1\">1</option>\n                        <option value=\"2\">2</option>\n                        <option value=\"3\">3</option>\n                        <option value=\"4\">4</option>\n                        <option value=\"5\">5</option>\n                        <option value=\"6\">6</option>\n                    </select>\n                <br/>\n\n                { catchPhraseError? <p>{catchPhraseError}</p>: \"\"}\n                <label>Pirate Catchphrase: </label>\n                <input \n                    type=\"text\" \n                    name=\"catchphrase\" \n                    value={catchphrase}\n                    onChange = { handleCatchPhrase }\n                    />\n                    <br/>\n\n                <label>Crew Position:</label>\n                <select \n                    name=\"position\" \n                    onChange={(e) => setPosition(e.target.value)}>\n                        <option selected=\"true\" disabled=\"disabled\">Choose A Position</option>\n                        <option value=\"Captain\">Captain</option>\n                        <option value=\"First Mate\">First Mate</option>\n                        <option value=\"Boatswain\">Boatswain</option>\n                        <option value=\"Powder Monkey\">Powder Monkey</option>\n                </select>\n\n                <br />\n\n                <label>Peg Leg</label>\n                <input \n                type=\"checkbox\" \n                id=\"pegLeg\"\n                name=\"pegLeg\"\n                value=\"true\"\n                onClick={(e)=>setPegLeg(true)}\n                />\n                <br />\n\n                <label>Eye Patch</label>\n                <input \n                type=\"checkbox\" \n                name=\"eyePatch\"\n                value={true}\n                onClick={(e) => setEyePatch(true)}\n                />\n                <br />\n\n                <label>Hook Hand</label>\n                <input \n                type=\"checkbox\" \n                name=\"hookHand\"\n                onClick={(e) => setHookHand(true)}\n                \n                />\n                <br />\n                <br />\n            <input type=\"submit\" />\n        </form>\n    )\n}","import React, { useState } from 'react'\nimport { Link, navigate } from '@reach/router'\nimport {\n    Paper,\n    FormControl,\n    InputLabel,\n    OutlinedInput,\n    Button,\n    makeStyles\n} from '@material-ui/core';\nimport axios from 'axios';\n\nconst useStyles = makeStyles({\n    paper: {\n        width: \"60rem\", padding: \"1rem\",\n        margin: \"auto\"\n    },\n    input: {\n        marginBottom: \"1rem\"\n    },\n    button: {\n        width: \"100%\",\n        display: 'block',\n        \n    },\n    dropdown: {\n        margin: \"1rem\"\n    }\n    // formControl: {\n    //     minWidth: 120,\n    // },\n});\n\nexport default () => {\n    const classes = useStyles();\n    const [name, setName] = useState(\"\");\n    const [ position, setPosition ] = useState(\"\")\n    const [ chests, setChests ] = useState();\n    const [ catchphrase, setCatchphrase ] = useState(\"\");\n    const [ imageUrl, setImageUrl ] = useState(\"\");\n    const [ errors, setErrors ] = useState([]);\n    const [ pegLeg, setPegLeg ] = useState(false);\n    const [ eyePatch, setEyePatch ] = useState(false);\n    const [ hookHand, setHookHand ] = useState(false);\n\n\n    const createPirate = (e) => {\n        e.preventDefault();\n        const myPirate = { name, position, chests, imageUrl, catchphrase, pegLeg, eyePatch, hookHand }\n        axios.post('http://localhost:8000/api/pirates/new', myPirate)\n            .then(res => {navigate(\"/pirates\")})\n            .catch(err => {\n                const errorResponse = err.response.data.errors;\n                const errorArr = [];\n                for(const key of Object.keys(errorResponse)) {\n                    errorArr.push(errorResponse[key].message)\n                }\n                setErrors(errorArr);\n            })\n    }    \n\n    return (\n        <Paper elevation={3} className={classes.paper}>\n                \n                <form onSubmit = { createPirate } >\n                {\n                    errors?\n                        (errors.map((err, index) => <p key={index}>{err}</p>)):\n                        \"\"\n                }\n                    <FormControl variant=\"outlined\" className={classes.input}>\n                        <InputLabel>Pirate Name</InputLabel>\n                        <OutlinedInput type=\"text\"\n                                        name=\"name\"\n                                        value={name}\n                                        onChange = { (e) => setName(e.target.value)}\n                                        />\n                    </FormControl>\n                    <br />\n\n                    <FormControl variant=\"outlined\" className={classes.input}>\n                        <InputLabel>Image URL</InputLabel>\n                        <OutlinedInput type=\"text\"\n                                        name=\"imageUrl\"\n                                        value={imageUrl}\n                                        onChange = {(e) => setImageUrl(e.target.value)}\n                                        />\n                    </FormControl>\n                    <br />\n\n                        <label>Number of Chests:</label>\n                        <select className={classes.dropdown} name=\"chests\" onSubmit={(e) => setChests(e.target.value)}>\n                            <option value={0}>0</option>\n                            <option value={1}>1</option>\n                            <option value={2}>2</option>\n                            <option value={3}>3</option>\n                            <option value={4}>4</option>\n                            <option value={5}>5</option>\n                            <option value={6}>6</option>\n                        </select>\n\n                    <br />\n\n                    <FormControl variant=\"outlined\" className={classes.input}>\n                        <InputLabel>Pirate Catchphrase</InputLabel>\n                        <OutlinedInput type=\"text\"\n                                        name=\"catchphrase\"\n                                        value={catchphrase}\n                                        onChange = {(e) => setCatchphrase(e.target.value)}\n                                        />\n                    </FormControl>\n                    <br />\n\n                        <label>Crew Position:</label>\n                        <select className={classes.dropdown} name=\"position\" onSubmit={(e) => setPosition(e.target.value)}>\n                            <option value={\"Captain\"}>Captain</option>\n                            <option value={\"First Mate\"}>First Mate</option>\n                            <option value={\"Quarter Master\"}>Quarter Master</option>\n                            <option value={\"Boatswain\"}>Boatswain</option>\n                            <option value={\"Powder Monkey\"}>Powder Monkey</option>\n                        </select>\n\n                    <br />\n\n                    <label>Peg Leg</label>\n                    <input \n                        type=\"checkbox\" \n                        id=\"pegLeg\"\n                        name=\"pegLeg\"\n                        value=\"true\"\n                        checked={(e) => setPegLeg(true)}\n                        />\n                    <br />\n\n                    <label>Eye Patch</label>\n                    <input \n                        type=\"checkbox\" \n                        name=\"eyePatch\"\n                        value={false}\n                        checked={(e) => setEyePatch(true)}\n                    />\n                    <br />\n\n                    <label>Hook Hand</label>\n                    <input \n                        type=\"checkbox\" \n                        name=\"hookHand\"\n                        value={false}\n                        checked={(e) => setHookHand(true)}\n                        />\n                    <br />\n                    <br />\n                    \n                    <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n                        ADD PIRATE\n                    </Button>\n\n                </form>\n            </Paper>\n\n    )\n}","import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport { navigate } from '@reach/router';\n\nimport {\n    Paper,\n    Card,\n    Button,\n    makeStyles\n} from '@material-ui/core';\nimport Form from '../components/Form';\nimport OtherForm from '../components/OtherForm';\n\nconst useStyles = makeStyles({\n    paper: {\n        width: \"60rem\",\n        padding: \"1rem\",\n        margin: \"auto\",\n        \n    },\n    card: {\n        width: \"60rem\",\n        padding: \"3rem\",\n        margin: \"auto\"\n    },\n    button: {\n        margin: \"1rem\"\n    }\n});\n\n\nexport default () => {\n    const classes = useStyles();\n\n    return (\n        <Card>  \n            <div className=\"topBar\">\n            <h1>Add Pirate</h1>\n            <Button \n                className={classes.button}\n                onClick={ () => navigate(\"/pirates\")}\n                variant=\"contained\" \n                color=\"primary\"\n            >\n                Crew Board</Button>\n            </div>\n            <Paper elevation={3} >\n                <OtherForm />\n            </Paper>\n            \n\n        </Card>\n    )\n}","import React, {useEffect, useState} from 'react'\nimport axios from 'axios';\nimport { navigate } from \"@reach/router\";\nimport {\n    Paper,\n    Card,\n    Button,\n    makeStyles\n} from '@material-ui/core';\n\nconst useStyles = makeStyles({\n    paper: {\n        width: \"50rem\",\n        padding: \"1rem\",\n        margin: \"auto\",\n        \n    },\n    card: {\n        width: \"40rem\",\n        padding: \"3rem\",\n        margin: \"auto\"\n    },\n    pic: {\n        width: \"10rem\"\n    }\n});\n\nexport default (props) => {\n    const { id } = props;\n    const [ pirate, setPirate ] = useState(\"\")\n    const classes = useStyles();\n\n    axios.get('http://localhost:8000/api/pirates/' + id)\n        .then(res => {\n            console.log(res.data)\n            setPirate(res.data)\n        })\n        .catch(err => console.log(err))\n\n    return(\n        <Card>  \n            <div className=\"topBar\">\n                    <div>\n                    <h1>{pirate.name}</h1>\n                    <Button \n                        onClick={ () => navigate(\"/pirates\")}\n                        variant=\"contained\" \n                        color=\"primary\"\n                        >\n                        Crew Board</Button>\n\n                    <Paper elevation={3} >\n                        <div>\n                            <img className={classes.pic} src={pirate.imageUrl} />\n                            <h3>{pirate.catchphrase}</h3>\n                        </div>\n                        <div>\n                            <h2>About: </h2>\n                            <p>Position: {pirate.position}</p> \n                            <p>Treasures: {pirate.chests}</p>\n                            <p>Peg Leg: {pirate.pegLeg}\n                                { pirate.pegLeg? <p>Yes</p>: <p>No</p>}  \n                            </p>\n                            <p>Eye Patch: \n                                { pirate.eyePatch? <p>Yes</p>: <p>No</p>}\n                            </p>\n                            <p>Hook Hand: \n                                { pirate.hookHand? <p>Yes</p>: <p>No</p>}\n                            </p>\n                        </div>\n\n                    </Paper> \n                    </div> \n\n            </div>\n        </Card>\n    )\n}\n","import './App.css';\nimport Main from './views/Main';\nimport { Router } from \"@reach/router\";\nimport Create from './views/Create';\nimport Display from './views/Display';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n          <Main path=\"/pirates\"/>\n          <Create path=\"/pirates/new\" />\n          <Display path=\"/pirates/:id\" />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}